{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\niziToast.settings({\n  position: 'topRight',\n});\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button[data-start]');\nconst spanDays = document.querySelector('span[data-days]');\nconst spanHours = document.querySelector('span[data-hours]');\nconst spanMinutes = document.querySelector('span[data-minutes]');\nconst spanSeconds = document.querySelector('span[data-seconds]');\nlet userSelectedDate = null;\nlet timeInterval;\nbutton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= Date.now()) {\n      iziToast.error({ message: 'Please choose a date in the future' });\n      button.disabled = true;\n    } else {\n      userSelectedDate = selectedDates[0];\n      button.disabled = false;\n    }\n  },\n};\n\nflatpickr(input, options);\n\nfunction start() {\n  button.disabled = true;\n  input.disabled = true;\n  clearInterval(timeInterval);\n  timeInterval = setInterval(() => {\n    const time = userSelectedDate - Date.now();\n    if (time <= 0) {\n      clearInterval(timeInterval);\n      iziToast.success({ message: \"Time's up!\" });\n      input.disabled = false;\n      button.disabled = true;\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(time);\n    spanDays.textContent = addStringTimer(days);\n    spanHours.textContent = addStringTimer(hours);\n    spanMinutes.textContent = addStringTimer(minutes);\n    spanSeconds.textContent = addStringTimer(seconds);\n  }, 1000);\n}\n\nfunction addStringTimer(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nbutton.addEventListener('click', start);\n"],"names":["iziToast","input","button","spanDays","spanHours","spanMinutes","spanSeconds","userSelectedDate","timeInterval","options","selectedDates","flatpickr","start","time","days","hours","minutes","seconds","convertMs","addStringTimer","value","ms"],"mappings":"+IAKAA,EAAS,SAAS,CAChB,SAAU,UACZ,CAAC,EAED,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,oBAAoB,EACpDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAC/D,IAAIC,EAAmB,KACnBC,EACJN,EAAO,SAAW,GAElB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,GAAK,KAAK,IAAG,GAC9BV,EAAS,MAAM,CAAE,QAAS,oCAAsC,CAAA,EAChEE,EAAO,SAAW,KAElBK,EAAmBG,EAAc,CAAC,EAClCR,EAAO,SAAW,GAErB,CACH,EAEAS,EAAUV,EAAOQ,CAAO,EAExB,SAASG,GAAQ,CACfV,EAAO,SAAW,GAClBD,EAAM,SAAW,GACjB,cAAcO,CAAY,EAC1BA,EAAe,YAAY,IAAM,CAC/B,MAAMK,EAAON,EAAmB,KAAK,IAAG,EACxC,GAAIM,GAAQ,EAAG,CACb,cAAcL,CAAY,EAC1BR,EAAS,QAAQ,CAAE,QAAS,YAAc,CAAA,EAC1CC,EAAM,SAAW,GACjBC,EAAO,SAAW,GAClB,MACD,CACD,KAAM,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EACxDV,EAAS,YAAcgB,EAAeL,CAAI,EAC1CV,EAAU,YAAce,EAAeJ,CAAK,EAC5CV,EAAY,YAAcc,EAAeH,CAAO,EAChDV,EAAY,YAAca,EAAeF,CAAO,CACjD,EAAE,GAAI,CACT,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAf,EAAO,iBAAiB,QAASU,CAAK"}